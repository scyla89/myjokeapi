openapi: 3.0.0
info:
  title: My Joke API
  description: >-
    This is a sample `Joke` server, where you can get random jokes, or search jokes by ID or term.
    <br>The main endpoints contain only dad jokes for now. They come directly from an Open API and converted to JokeDto objects.
    <br>If random jokes are searched, they are saved in the local in-memory database.
    
    Support:
  contact:
    name: Cs Doe
    email: cs.doe@example.com
  version: 1.0.0-oas3
servers:
  - url: http://localhost:8080/jokes
    description: Local server
security: [] #No security
tags:
  - name: dadjokes
    externalDocs:
      description: Originally from icanhazdadjoke API
      url: https://icanhazdadjoke.com/
  - name: dbOperations
paths:
  /random:
    get:
      tags:
        - dadjokes
      summary: Provides with a random joke
      operationId: getRandom
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JokeDto'
        '400':
          description: Invalid status value
  /{id}:
    get:
      tags:
        - dadjokes
      summary: Searches a joke by ID
      operationId: findById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JokeDto'
        '400':
          description: Invalid status value
  /byTerm:
    get:
      tags:
        - dadjokes
      summary: Searches a joke by term
      operationId: findByTerm
      parameters:
        - in: query
          name: term
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JokeDto'
        '400':
          description: Invalid status value
  /add:
    post:
      tags:
        - dbOperations
      summary: Adds a new joke to the local database
      operationId: addJoke
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Joke'
      responses:
        '201':
          description: Created
  /all:
    get:
      tags:
        - dbOperations
      summary: Lists all Jokes saved in the local database
      operationId: allJokes
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JokeEntity'
        '400':
          description: Invalid status value
  /category:
    get:
      tags:
        - dbOperations
      summary: Lists all Jokes from the Db with the given category
      operationId: findCategory
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JokeEntity'
        '400':
          description: Invalid status value
components:
  schemas:
    JokeDto:
      type: object
      properties:
        joke:
          type: string
          example: When my wife told me to stop impersonating a flamingo, I had to put my foot down.
    JokeEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "auto-generated ID"
          example: 1
        externalId:
          type: string
          example: iGQZDAIRZDd
        joke:
          type: string
          example: Why did the burglar hang his mugshot on the wall? To prove that he was framed!
        category:
          type: string
          example: dadjokes / officejokes / ...
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header